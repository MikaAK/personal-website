h2.f2.tc.roboto-slab.b.gray Contact

mat-card.center.mt5.mat-elevation-z5(ngClass.xs='w-80', ngClass.gt-xs='w-60')
  form.pv3(
    #form='ngForm',
    novalidate,
    [formGroup]='contactGroup',
    (ngSubmit)='onSubmit(contactGroup.value)',
    fxLayout='column',
    fxLayoutAlign='space-between center'
  )
    .w-90(fxLayout='column', fxLayout.gt-xs, fxLayoutAlign='space-between')
      mat-form-field(fxFlex.gt-xs='40%', ngClass.xs='w-100')
        input(
          matInput,
          [readonly]='didSendEmail',
          placeholder='Name',
          [formControl]='name'
        )

        mat-error Name is required

      mat-form-field(fxFlex.gt-xs='40%', ngClass.xs='w-100')
        input(
          matInput,
          [readonly]='didSendEmail',
          placeholder='Email',
          [formControl]='email'
        )

        mat-error {{ emailErrorMessage }}

    mat-form-field.w-90
      textarea.h4(
        matInput,
        [readonly]='didSendEmail',
        placeholder='Message',
        [formControl]='message'
      )
      mat-error Message is required

    .tc.mt4.w-50
      button.mat-button-padding.bg-washed-blue.white.w-100(
        mat-button,
        color='accent',
        type='submit',
        [disabled]='didSendEmail || isSendingEmail'
      )
        div(*ngIf='!didSendEmail; else sentEmail', fxLayout, fxLayoutAlign='center center')
          span {{ isSendingEmail ? 'Sending' : 'Send' }}
          mat-spinner.ml2(*ngIf='isSendingEmail', [diameter]='20')

ng-template(#sentEmail)
  div(fxLayout, fxLayoutAlign='center center')
    span Sent

    .icon-xs.green.ml2
      != require('assets/svg/checkmark.svg')

